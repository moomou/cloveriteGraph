// Generated by IcedCoffeeScript 1.6.2d
(function() {
  var MetaNode, MetaSchema, REL_META, db, neo4j, _und;



  _und = require('underscore');

  neo4j = require('neo4j');

  db = {
    neo: new neo4j.GraphDatabase(process.env.NEO4J_URL || 'http://localhost:7474')
  };

  REL_META = "_meta";

  MetaSchema = {
    "createdAt": -1,
    "modifiedAt": -1
  };

  module.exports = MetaNode = (function() {
    function MetaNode(_node) {
      this._node = _node;
    }

    MetaNode.prototype.serialize = function() {
      var data;
      data = this._node.data;
      _und.extend(data, {
        id: this._node.id
      });
      return data;
    };

    MetaNode.prototype.save = function() {
      this._node.data.modifiedAt = new Date().getTime() / 1000;
      if (this._node.data.createdAt < 0) {
        this._node.data.createdAt = new Date().getTime() / 1000;
      }
      return this._node.save(function(err) {
        return cb(err);
      });
    };

    return MetaNode;

  })();

  /*
  Static Method
  */


  MetaSchema.updateMeta = function(nodeId, cb) {
    var params, query;
    query = ['START node=node({nodeId})', 'MATCH (node)<-[:REL_META]-(meta)', 'RETURN meta'].join('\n').replace('REL_META', REL_META);
    params = {
      nodeId: nodeId
    };
    return db.neo.query(query, params, function(err, res) {
      if (err) {
        return cb(err, null);
      }
      return cb(null, new MetaSchema(res[0]));
    });
  };

}).call(this);
