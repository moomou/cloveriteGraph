// Generated by IcedCoffeeScript 1.6.3-e
(function() {
  var Composed, Constants, ErrorDevMessage, Neo, Response, SchemaUtil, Tag, iced, __iced_k, __iced_k_noop, _create, _del, _show, _und, _update;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  require('source-map-support').install();

  _und = require('underscore');

  Neo = require('../models/neo');

  Composed = require('../models/composed');

  Tag = require('../models/tag');

  SchemaUtil = require('../models/stdSchema');

  Constants = SchemaUtil.Constants;

  Response = require('./response');

  ErrorDevMessage = Response.ErrorDevMessage;

  _show = function(req, res, next) {
    var composed, err, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "composed.coffee",
        funcname: "_show"
      });
      Composed.show(req.params.id, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return composed = arguments[1];
          };
        })(),
        lineno: 18
      }));
      __iced_deferrals._fulfill();
    })(function() {
      if (err) {
        return Response.ErrorResponse(res)(500, ErrorDevMessage.dbIssue());
      }
      return Response.OKResponse(res)(200, composed);
    });
  };

  exports.show = _show;

  _create = function(req, res, next) {
    var composed, err, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "composed.coffee",
        funcname: "_create"
      });
      Composed.create(req.body, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return composed = arguments[1];
          };
        })(),
        lineno: 27
      }));
      __iced_deferrals._fulfill();
    })(function() {
      if (err) {
        return Response.ErrorResponse(res)(500, ErrorDevMessage.dbIssue());
      }
      return Response.OKResponse(res)(200, composed);
    });
  };

  exports.create = _create;

  _update = function(req, res, next) {
    var composed, err, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "composed.coffee",
        funcname: "_update"
      });
      Composed.update(req.params.id, req.body, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return composed = arguments[1];
          };
        })(),
        lineno: 36
      }));
      __iced_deferrals._fulfill();
    })(function() {
      if (err) {
        if (err.dbError) {
          return Response.ErrorResponse(res)(500, ErrorDevMessage.dbIssue());
        }
        if (err.validationError) {
          return Response.ErrorResponse(res)(400, err.validationError);
        }
      }
      return Response.OKResponse(res)(200, composed);
    });
  };

  exports.update = _update;

  _del = function(req, res, next) {
    var err, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "composed.coffee",
        funcname: "_del"
      });
      Composed["delete"](req.params.id, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return __iced_deferrals.ret = arguments[1];
          };
        })(),
        lineno: 48
      }));
      __iced_deferrals._fulfill();
    })(function() {
      if (err) {
        return Response.ErrorResponse(res)(500, ErrorDevMessage.dbIssue());
      }
      return Response.OKResponse(res)(204);
    });
  };

  exports.del = _del;

  exports.getRelated = function(req, res, next) {
    return res.status(503).json({
      error: "Not Implemented"
    });
  };

}).call(this);
