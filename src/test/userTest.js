// Generated by IcedCoffeeScript 1.6.3-e
(function() {
  var api, apiVersion, app, assert, chai, randomId, should, supertest;



  supertest = require('supertest');

  chai = require('chai');

  should = chai.should();

  assert = chai.assert;

  app = require('../app').app;

  api = supertest(app);

  apiVersion = app.version;

  randomId = '#' + (Math.random() * 0xFFFFFF << 0).toString(16);

  describe('User', function() {
    var userId;
    userId = null;
    it('should return 201 when creating user with privileged token', function(done) {
      return api.post("" + apiVersion + "/user").set("x-access-token", "superman").send({
        username: "TEST_" + randomId,
        email: "" + randomId + "@me.com"
      }).expect(201).end(function(err, res) {
        var response;
        response = JSON.parse(res.text);
        assert.isNumber(response.payload.id);
        userId = response.id;
        return done();
      });
    });
    it('should return 403 when creating user with bad token', function(done) {
      return api.post("" + apiVersion + "/user").set("x-access-token", "wonder woman").send({
        username: "TEST_" + randomId,
        email: "" + randomId + "@me.com"
      }).expect(403, done);
    });
    return it('should return 400 when creating user with lacking info', function(done) {
      return api.post("" + apiVersion + "/user").set("x-access-token", "superman").send({
        username: "TEST_" + randomId
      }).expect(400, done);
    });
  });

}).call(this);
