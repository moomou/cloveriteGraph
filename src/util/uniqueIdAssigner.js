// Generated by IcedCoffeeScript 1.6.3-e
(function() {
  var Constants, SchemaUtil, Setup, iced, redis, slug, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  Setup = require('./setup');

  slug = require('slug');

  redis = Setup.db.redis;

  SchemaUtil = require('./stdSchema');

  Constants = SchemaUtil.Constants;

  exports.getUniqueId = function(entityTitle, title, cb) {
    var err, exists, slugified, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    slugified = slug("#" + entityTitle + "#" + title);
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "uniqueIdAssigner.coffee",
        funcname: "getUniqueId"
      });
      redis.hexists(Constants.AUTO_COMPLETE, slugified, __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            err = arguments[0];
            return exists = arguments[1];
          };
        })(),
        lineno: 12
      }));
      __iced_deferrals._fulfill();
    })(function() {
      (function(__iced_k) {
        if (!exists) {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "uniqueIdAssigner.coffee",
              funcname: "getUniqueId"
            });
            redis.hset(Constants.AUTO_COMPLETE, slugified, "", __iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return err = arguments[0];
                };
              })(),
              lineno: 15
            }));
            __iced_deferrals._fulfill();
          })(__iced_k);
        } else {
          return __iced_k();
        }
      })(function() {
        return cb(err, slugified);
      });
    });
  };

}).call(this);
